// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not show an admin link if user is not signed in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    location={
      Object {
        "pathname": "/some/path",
      }
    }
    user={
      Object {
        "id": 357,
        "isLoggedIn": false,
        "osmProfile": Object {
          "avatarURL": "http://example.com/profilepic.jpg",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <nav
          className="mr-flex mr-items-center"
        >
          <Link
            className="mr-text-white hover:mr-text-current"
            rel="home"
            replace={false}
            to="/"
          >
            <SvgSymbol
              className="mr-block mr-fill-current mr-w-48 mr-h-auto"
              sym="mr-logo"
              viewBox="0 0 174 40"
            />
          </Link>
          <MediaQuery
            minWidth="1024px"
            values={Object {}}
          >
            <div
              className="mr-ml-8 xl:mr-ml-12"
            >
              <ol
                className="mr-list-nav-primary"
              >
                <Nav
                  closeMobileMenu={[Function]}
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </ol>
            </div>
          </MediaQuery>
        </nav>,
        <MediaQuery
          minWidth="1024px"
          values={Object {}}
        >
          <LoggedInUser
            location={
              Object {
                "pathname": "/some/path",
              }
            }
            user={
              Object {
                "id": 357,
                "isLoggedIn": false,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              }
            }
          >
            <div
              className="mr-flex mr-items-center"
            >
              <PointsTicker
                className="mr-mr-8"
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
              <Clickout
                button={
                  <ProfileButton
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                }
                className="mr-dropdown--right"
                close={[Function]}
                isVisible={false}
                toggleVisible={[Function]}
              >
                <ol
                  className="mr-list-dropdown"
                >
                  <li>
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      onClick={[Function]}
                      to="/admin/projects"
                    >
                      <FormattedMessage
                        defaultMessage="Create & Manage"
                        id="Navbar.links.admin"
                        values={Object {}}
                      />
                    </NavLink>
                  </li>
                  <li>
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      onClick={[Function]}
                      to="/user/profile"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.userProfile"
                        values={Object {}}
                      />
                    </NavLink>
                  </li>
                  <li>
                    <NavLink
                      activeClassName="active"
                      ariaCurrent="true"
                      to={Object {}}
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.links.signout"
                        values={Object {}}
                      />
                    </NavLink>
                  </li>
                </ol>
              </Clickout>
            </div>
          </LoggedInUser>
          <LoggedOutUser
            location={
              Object {
                "pathname": "/some/path",
              }
            }
            user={
              Object {
                "id": 357,
                "isLoggedIn": false,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              }
            }
          >
            <Connect(SignInButton)
              className="white-on-green top-nav__signin-link"
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
          </LoggedOutUser>
        </MediaQuery>,
        <MediaQuery
          maxWidth="1024px"
          values={Object {}}
        >
          <Menu
            bodyClassName=""
            burgerBarClassName=""
            burgerButtonClassName=""
            className=""
            crossButtonClassName=""
            crossClassName=""
            customBurgerIcon={false}
            customCrossIcon={
              <SvgSymbol
                className="mr-fill-white mr-w-full mr-h-full"
                sym="icon-close"
                viewBox="0 0 20 20"
              />
            }
            disableCloseOnEsc={false}
            id=""
            isOpen={false}
            itemListClassName=""
            menuClassName=""
            morphShapeClassName=""
            noOverlay={false}
            onStateChange={[Function]}
            outerContainerId=""
            overlayClassName=""
            pageWrapId=""
            right={true}
            styles={
              Object {
                "bmCrossButton": Object {
                  "height": "1.125rem",
                  "right": 0,
                  "top": 0,
                  "width": "1.125rem",
                },
                "bmOverlay": Object {
                  "background": "rgba(0, 0, 0, 0.5)",
                },
              }
            }
            width={260}
          >
            <MobileNav
              closeMobileMenu={[Function]}
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              signout={[Function]}
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
          </Menu>
          <button
            aria-label="Menu"
            className="mr-text-white"
            onClick={[Function]}
          >
            <SvgSymbol
              className="mr-w-6 mr-h-auto mr-fill-current"
              sym="icon-menu"
              viewBox="0 0 20 20"
            />
          </button>
        </MediaQuery>,
      ],
      "className": "mr-relative mr-bg-gradient-r-green-blue mr-shadow mr-p-6 mr-flex mr-items-center mr-justify-between",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="mr-text-white hover:mr-text-current"
              rel="home"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                sym="mr-logo"
                viewBox="0 0 174 40"
              />
            </Link>,
            <MediaQuery
              minWidth="1024px"
              values={Object {}}
            >
              <div
                className="mr-ml-8 xl:mr-ml-12"
              >
                <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>
              </div>
            </MediaQuery>,
          ],
          "className": "mr-flex mr-items-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <SvgSymbol
                className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                sym="mr-logo"
                viewBox="0 0 174 40"
              />,
              "className": "mr-text-white hover:mr-text-current",
              "rel": "home",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "mr-block mr-fill-current mr-w-48 mr-h-auto",
                "sym": "mr-logo",
                "viewBox": "0 0 174 40",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div
                className="mr-ml-8 xl:mr-ml-12"
              >
                <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>
              </div>,
              "minWidth": "1024px",
              "values": Object {},
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>,
                "className": "mr-ml-8 xl:mr-ml-12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "className": "mr-list-nav-primary",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "closeMobileMenu": [Function],
                    "location": Object {
                      "pathname": "/some/path",
                    },
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "ol",
              },
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "nav",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <LoggedInUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <div
                className="mr-flex mr-items-center"
              >
                <PointsTicker
                  className="mr-mr-8"
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
                <Clickout
                  button={
                    <ProfileButton
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  }
                  className="mr-dropdown--right"
                  close={[Function]}
                  isVisible={false}
                  toggleVisible={[Function]}
                >
                  <ol
                    className="mr-list-dropdown"
                  >
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        onClick={[Function]}
                        to="/admin/projects"
                      >
                        <FormattedMessage
                          defaultMessage="Create & Manage"
                          id="Navbar.links.admin"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        onClick={[Function]}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                  </ol>
                </Clickout>
              </div>
            </LoggedInUser>,
            <LoggedOutUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </LoggedOutUser>,
          ],
          "minWidth": "1024px",
          "values": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <div
                className="mr-flex mr-items-center"
              >
                <PointsTicker
                  className="mr-mr-8"
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
                <Clickout
                  button={
                    <ProfileButton
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  }
                  className="mr-dropdown--right"
                  close={[Function]}
                  isVisible={false}
                  toggleVisible={[Function]}
                >
                  <ol
                    className="mr-list-dropdown"
                  >
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        onClick={[Function]}
                        to="/admin/projects"
                      >
                        <FormattedMessage
                          defaultMessage="Create & Manage"
                          id="Navbar.links.admin"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        onClick={[Function]}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                  </ol>
                </Clickout>
              </div>,
              "location": Object {
                "pathname": "/some/path",
              },
              "user": Object {
                "id": 357,
                "isLoggedIn": false,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <PointsTicker
                    className="mr-mr-8"
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  <Clickout
                    button={
                      <ProfileButton
                        location={
                          Object {
                            "pathname": "/some/path",
                          }
                        }
                        user={
                          Object {
                            "id": 357,
                            "isLoggedIn": false,
                            "osmProfile": Object {
                              "avatarURL": "http://example.com/profilepic.jpg",
                            },
                          }
                        }
                      />
                    }
                    className="mr-dropdown--right"
                    close={[Function]}
                    isVisible={false}
                    toggleVisible={[Function]}
                  >
                    <ol
                      className="mr-list-dropdown"
                    >
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/admin/projects"
                        >
                          <FormattedMessage
                            defaultMessage="Create & Manage"
                            id="Navbar.links.admin"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/user/profile"
                        >
                          <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          to={Object {}}
                        >
                          <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                    </ol>
                  </Clickout>,
                ],
                "className": "mr-flex mr-items-center",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "className": "mr-mr-8",
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "button": <ProfileButton
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />,
                    "children": <ol
                      className="mr-list-dropdown"
                    >
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/admin/projects"
                        >
                          <FormattedMessage
                            defaultMessage="Create & Manage"
                            id="Navbar.links.admin"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/user/profile"
                        >
                          <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          to={Object {}}
                        >
                          <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                    </ol>,
                    "className": "mr-dropdown--right",
                    "close": [Function],
                    "isVisible": false,
                    "toggleVisible": [Function],
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/admin/projects"
                          >
                            <FormattedMessage
                              defaultMessage="Create & Manage"
                              id="Navbar.links.admin"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>,
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/user/profile"
                          >
                            <FormattedMessage
                              defaultMessage="User Profile"
                              id="Navbar.links.userProfile"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>,
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to={Object {}}
                          >
                            <FormattedMessage
                              defaultMessage="Sign out"
                              id="Navbar.links.signout"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>,
                      ],
                      "className": "mr-list-dropdown",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/admin/projects"
                          >
                            <FormattedMessage
                              defaultMessage="Create & Manage"
                              id="Navbar.links.admin"
                              values={Object {}}
                            />
                          </NavLink>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "activeClassName": "active",
                            "ariaCurrent": "true",
                            "children": <FormattedMessage
                              defaultMessage="Create & Manage"
                              id="Navbar.links.admin"
                              values={Object {}}
                            />,
                            "onClick": [Function],
                            "to": "/admin/projects",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "defaultMessage": "Create & Manage",
                              "id": "Navbar.links.admin",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        "type": "li",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/user/profile"
                          >
                            <FormattedMessage
                              defaultMessage="User Profile"
                              id="Navbar.links.userProfile"
                              values={Object {}}
                            />
                          </NavLink>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "activeClassName": "active",
                            "ariaCurrent": "true",
                            "children": <FormattedMessage
                              defaultMessage="User Profile"
                              id="Navbar.links.userProfile"
                              values={Object {}}
                            />,
                            "onClick": [Function],
                            "to": "/user/profile",
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "defaultMessage": "User Profile",
                              "id": "Navbar.links.userProfile",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        "type": "li",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to={Object {}}
                          >
                            <FormattedMessage
                              defaultMessage="Sign out"
                              id="Navbar.links.signout"
                              values={Object {}}
                            />
                          </NavLink>,
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "function",
                          "props": Object {
                            "activeClassName": "active",
                            "ariaCurrent": "true",
                            "children": <FormattedMessage
                              defaultMessage="Sign out"
                              id="Navbar.links.signout"
                              values={Object {}}
                            />,
                            "onClick": undefined,
                            "to": Object {},
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "defaultMessage": "Sign out",
                              "id": "Navbar.links.signout",
                              "values": Object {},
                            },
                            "ref": null,
                            "rendered": null,
                            "type": [Function],
                          },
                          "type": [Function],
                        },
                        "type": "li",
                      },
                    ],
                    "type": "ol",
                  },
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              "location": Object {
                "pathname": "/some/path",
              },
              "user": Object {
                "id": 357,
                "isLoggedIn": false,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "white-on-green top-nav__signin-link",
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={false}
              customCrossIcon={
                <SvgSymbol
                  className="mr-fill-white mr-w-full mr-h-full"
                  sym="icon-close"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "height": "1.125rem",
                    "right": 0,
                    "top": 0,
                    "width": "1.125rem",
                  },
                  "bmOverlay": Object {
                    "background": "rgba(0, 0, 0, 0.5)",
                  },
                }
              }
              width={260}
            >
              <MobileNav
                closeMobileMenu={[Function]}
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                signout={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </Menu>,
            <button
              aria-label="Menu"
              className="mr-text-white"
              onClick={[Function]}
            >
              <SvgSymbol
                className="mr-w-6 mr-h-auto mr-fill-current"
                sym="icon-menu"
                viewBox="0 0 20 20"
              />
            </button>,
          ],
          "maxWidth": "1024px",
          "values": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bodyClassName": "",
              "burgerBarClassName": "",
              "burgerButtonClassName": "",
              "children": <MobileNav
                closeMobileMenu={[Function]}
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                signout={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              "className": "",
              "crossButtonClassName": "",
              "crossClassName": "",
              "customBurgerIcon": false,
              "customCrossIcon": <SvgSymbol
                className="mr-fill-white mr-w-full mr-h-full"
                sym="icon-close"
                viewBox="0 0 20 20"
              />,
              "disableCloseOnEsc": false,
              "id": "",
              "isOpen": false,
              "itemListClassName": "",
              "menuClassName": "",
              "morphShapeClassName": "",
              "noOverlay": false,
              "onStateChange": [Function],
              "outerContainerId": "",
              "overlayClassName": "",
              "pageWrapId": "",
              "right": true,
              "styles": Object {
                "bmCrossButton": Object {
                  "height": "1.125rem",
                  "right": 0,
                  "top": 0,
                  "width": "1.125rem",
                },
                "bmOverlay": Object {
                  "background": "rgba(0, 0, 0, 0.5)",
                },
              },
              "width": 260,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "closeMobileMenu": [Function],
                "location": Object {
                  "pathname": "/some/path",
                },
                "signout": [Function],
                "user": Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "Menu",
              "children": <SvgSymbol
                className="mr-w-6 mr-h-auto mr-fill-current"
                sym="icon-menu"
                viewBox="0 0 20 20"
              />,
              "className": "mr-text-white",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "mr-w-6 mr-h-auto mr-fill-current",
                "sym": "icon-menu",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <nav
            className="mr-flex mr-items-center"
          >
            <Link
              className="mr-text-white hover:mr-text-current"
              rel="home"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                sym="mr-logo"
                viewBox="0 0 174 40"
              />
            </Link>
            <MediaQuery
              minWidth="1024px"
              values={Object {}}
            >
              <div
                className="mr-ml-8 xl:mr-ml-12"
              >
                <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>
              </div>
            </MediaQuery>
          </nav>,
          <MediaQuery
            minWidth="1024px"
            values={Object {}}
          >
            <LoggedInUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <div
                className="mr-flex mr-items-center"
              >
                <PointsTicker
                  className="mr-mr-8"
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
                <Clickout
                  button={
                    <ProfileButton
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  }
                  className="mr-dropdown--right"
                  close={[Function]}
                  isVisible={false}
                  toggleVisible={[Function]}
                >
                  <ol
                    className="mr-list-dropdown"
                  >
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        onClick={[Function]}
                        to="/admin/projects"
                      >
                        <FormattedMessage
                          defaultMessage="Create & Manage"
                          id="Navbar.links.admin"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        onClick={[Function]}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                    <li>
                      <NavLink
                        activeClassName="active"
                        ariaCurrent="true"
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </NavLink>
                    </li>
                  </ol>
                </Clickout>
              </div>
            </LoggedInUser>
            <LoggedOutUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </LoggedOutUser>
          </MediaQuery>,
          <MediaQuery
            maxWidth="1024px"
            values={Object {}}
          >
            <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={false}
              customCrossIcon={
                <SvgSymbol
                  className="mr-fill-white mr-w-full mr-h-full"
                  sym="icon-close"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "height": "1.125rem",
                    "right": 0,
                    "top": 0,
                    "width": "1.125rem",
                  },
                  "bmOverlay": Object {
                    "background": "rgba(0, 0, 0, 0.5)",
                  },
                }
              }
              width={260}
            >
              <MobileNav
                closeMobileMenu={[Function]}
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                signout={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </Menu>
            <button
              aria-label="Menu"
              className="mr-text-white"
              onClick={[Function]}
            >
              <SvgSymbol
                className="mr-w-6 mr-h-auto mr-fill-current"
                sym="icon-menu"
                viewBox="0 0 20 20"
              />
            </button>
          </MediaQuery>,
        ],
        "className": "mr-relative mr-bg-gradient-r-green-blue mr-shadow mr-p-6 mr-flex mr-items-center mr-justify-between",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="mr-text-white hover:mr-text-current"
                rel="home"
                replace={false}
                to="/"
              >
                <SvgSymbol
                  className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                  sym="mr-logo"
                  viewBox="0 0 174 40"
                />
              </Link>,
              <MediaQuery
                minWidth="1024px"
                values={Object {}}
              >
                <div
                  className="mr-ml-8 xl:mr-ml-12"
                >
                  <ol
                    className="mr-list-nav-primary"
                  >
                    <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  </ol>
                </div>
              </MediaQuery>,
            ],
            "className": "mr-flex mr-items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <SvgSymbol
                  className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                  sym="mr-logo"
                  viewBox="0 0 174 40"
                />,
                "className": "mr-text-white hover:mr-text-current",
                "rel": "home",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "mr-block mr-fill-current mr-w-48 mr-h-auto",
                  "sym": "mr-logo",
                  "viewBox": "0 0 174 40",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div
                  className="mr-ml-8 xl:mr-ml-12"
                >
                  <ol
                    className="mr-list-nav-primary"
                  >
                    <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  </ol>
                </div>,
                "minWidth": "1024px",
                "values": Object {},
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ol
                    className="mr-list-nav-primary"
                  >
                    <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  </ol>,
                  "className": "mr-ml-8 xl:mr-ml-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />,
                    "className": "mr-list-nav-primary",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "closeMobileMenu": [Function],
                      "location": Object {
                        "pathname": "/some/path",
                      },
                      "user": Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "ol",
                },
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "nav",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <LoggedInUser
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              >
                <div
                  className="mr-flex mr-items-center"
                >
                  <PointsTicker
                    className="mr-mr-8"
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                  <Clickout
                    button={
                      <ProfileButton
                        location={
                          Object {
                            "pathname": "/some/path",
                          }
                        }
                        user={
                          Object {
                            "id": 357,
                            "isLoggedIn": false,
                            "osmProfile": Object {
                              "avatarURL": "http://example.com/profilepic.jpg",
                            },
                          }
                        }
                      />
                    }
                    className="mr-dropdown--right"
                    close={[Function]}
                    isVisible={false}
                    toggleVisible={[Function]}
                  >
                    <ol
                      className="mr-list-dropdown"
                    >
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/admin/projects"
                        >
                          <FormattedMessage
                            defaultMessage="Create & Manage"
                            id="Navbar.links.admin"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/user/profile"
                        >
                          <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          to={Object {}}
                        >
                          <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                    </ol>
                  </Clickout>
                </div>
              </LoggedInUser>,
              <LoggedOutUser
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              >
                <Connect(SignInButton)
                  className="white-on-green top-nav__signin-link"
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </LoggedOutUser>,
            ],
            "minWidth": "1024px",
            "values": Object {},
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <div
                  className="mr-flex mr-items-center"
                >
                  <PointsTicker
                    className="mr-mr-8"
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                  <Clickout
                    button={
                      <ProfileButton
                        location={
                          Object {
                            "pathname": "/some/path",
                          }
                        }
                        user={
                          Object {
                            "id": 357,
                            "isLoggedIn": false,
                            "osmProfile": Object {
                              "avatarURL": "http://example.com/profilepic.jpg",
                            },
                          }
                        }
                      />
                    }
                    className="mr-dropdown--right"
                    close={[Function]}
                    isVisible={false}
                    toggleVisible={[Function]}
                  >
                    <ol
                      className="mr-list-dropdown"
                    >
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/admin/projects"
                        >
                          <FormattedMessage
                            defaultMessage="Create & Manage"
                            id="Navbar.links.admin"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          onClick={[Function]}
                          to="/user/profile"
                        >
                          <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                      <li>
                        <NavLink
                          activeClassName="active"
                          ariaCurrent="true"
                          to={Object {}}
                        >
                          <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />
                        </NavLink>
                      </li>
                    </ol>
                  </Clickout>
                </div>,
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <PointsTicker
                      className="mr-mr-8"
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": false,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />,
                    <Clickout
                      button={
                        <ProfileButton
                          location={
                            Object {
                              "pathname": "/some/path",
                            }
                          }
                          user={
                            Object {
                              "id": 357,
                              "isLoggedIn": false,
                              "osmProfile": Object {
                                "avatarURL": "http://example.com/profilepic.jpg",
                              },
                            }
                          }
                        />
                      }
                      className="mr-dropdown--right"
                      close={[Function]}
                      isVisible={false}
                      toggleVisible={[Function]}
                    >
                      <ol
                        className="mr-list-dropdown"
                      >
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/admin/projects"
                          >
                            <FormattedMessage
                              defaultMessage="Create & Manage"
                              id="Navbar.links.admin"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/user/profile"
                          >
                            <FormattedMessage
                              defaultMessage="User Profile"
                              id="Navbar.links.userProfile"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to={Object {}}
                          >
                            <FormattedMessage
                              defaultMessage="Sign out"
                              id="Navbar.links.signout"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>
                      </ol>
                    </Clickout>,
                  ],
                  "className": "mr-flex mr-items-center",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": "mr-mr-8",
                      "user": Object {
                        "id": 357,
                        "isLoggedIn": false,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "button": <ProfileButton
                        location={
                          Object {
                            "pathname": "/some/path",
                          }
                        }
                        user={
                          Object {
                            "id": 357,
                            "isLoggedIn": false,
                            "osmProfile": Object {
                              "avatarURL": "http://example.com/profilepic.jpg",
                            },
                          }
                        }
                      />,
                      "children": <ol
                        className="mr-list-dropdown"
                      >
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/admin/projects"
                          >
                            <FormattedMessage
                              defaultMessage="Create & Manage"
                              id="Navbar.links.admin"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            onClick={[Function]}
                            to="/user/profile"
                          >
                            <FormattedMessage
                              defaultMessage="User Profile"
                              id="Navbar.links.userProfile"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>
                        <li>
                          <NavLink
                            activeClassName="active"
                            ariaCurrent="true"
                            to={Object {}}
                          >
                            <FormattedMessage
                              defaultMessage="Sign out"
                              id="Navbar.links.signout"
                              values={Object {}}
                            />
                          </NavLink>
                        </li>
                      </ol>,
                      "className": "mr-dropdown--right",
                      "close": [Function],
                      "isVisible": false,
                      "toggleVisible": [Function],
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <li>
                            <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              onClick={[Function]}
                              to="/admin/projects"
                            >
                              <FormattedMessage
                                defaultMessage="Create & Manage"
                                id="Navbar.links.admin"
                                values={Object {}}
                              />
                            </NavLink>
                          </li>,
                          <li>
                            <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              onClick={[Function]}
                              to="/user/profile"
                            >
                              <FormattedMessage
                                defaultMessage="User Profile"
                                id="Navbar.links.userProfile"
                                values={Object {}}
                              />
                            </NavLink>
                          </li>,
                          <li>
                            <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to={Object {}}
                            >
                              <FormattedMessage
                                defaultMessage="Sign out"
                                id="Navbar.links.signout"
                                values={Object {}}
                              />
                            </NavLink>
                          </li>,
                        ],
                        "className": "mr-list-dropdown",
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              onClick={[Function]}
                              to="/admin/projects"
                            >
                              <FormattedMessage
                                defaultMessage="Create & Manage"
                                id="Navbar.links.admin"
                                values={Object {}}
                              />
                            </NavLink>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "activeClassName": "active",
                              "ariaCurrent": "true",
                              "children": <FormattedMessage
                                defaultMessage="Create & Manage"
                                id="Navbar.links.admin"
                                values={Object {}}
                              />,
                              "onClick": [Function],
                              "to": "/admin/projects",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "defaultMessage": "Create & Manage",
                                "id": "Navbar.links.admin",
                                "values": Object {},
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          "type": "li",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              onClick={[Function]}
                              to="/user/profile"
                            >
                              <FormattedMessage
                                defaultMessage="User Profile"
                                id="Navbar.links.userProfile"
                                values={Object {}}
                              />
                            </NavLink>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "activeClassName": "active",
                              "ariaCurrent": "true",
                              "children": <FormattedMessage
                                defaultMessage="User Profile"
                                id="Navbar.links.userProfile"
                                values={Object {}}
                              />,
                              "onClick": [Function],
                              "to": "/user/profile",
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "defaultMessage": "User Profile",
                                "id": "Navbar.links.userProfile",
                                "values": Object {},
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          "type": "li",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <NavLink
                              activeClassName="active"
                              ariaCurrent="true"
                              to={Object {}}
                            >
                              <FormattedMessage
                                defaultMessage="Sign out"
                                id="Navbar.links.signout"
                                values={Object {}}
                              />
                            </NavLink>,
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "function",
                            "props": Object {
                              "activeClassName": "active",
                              "ariaCurrent": "true",
                              "children": <FormattedMessage
                                defaultMessage="Sign out"
                                id="Navbar.links.signout"
                                values={Object {}}
                              />,
                              "onClick": undefined,
                              "to": Object {},
                            },
                            "ref": null,
                            "rendered": Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "defaultMessage": "Sign out",
                                "id": "Navbar.links.signout",
                                "values": Object {},
                              },
                              "ref": null,
                              "rendered": null,
                              "type": [Function],
                            },
                            "type": [Function],
                          },
                          "type": "li",
                        },
                      ],
                      "type": "ol",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Connect(SignInButton)
                  className="white-on-green top-nav__signin-link"
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": false,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "white-on-green top-nav__signin-link",
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Menu
                bodyClassName=""
                burgerBarClassName=""
                burgerButtonClassName=""
                className=""
                crossButtonClassName=""
                crossClassName=""
                customBurgerIcon={false}
                customCrossIcon={
                  <SvgSymbol
                    className="mr-fill-white mr-w-full mr-h-full"
                    sym="icon-close"
                    viewBox="0 0 20 20"
                  />
                }
                disableCloseOnEsc={false}
                id=""
                isOpen={false}
                itemListClassName=""
                menuClassName=""
                morphShapeClassName=""
                noOverlay={false}
                onStateChange={[Function]}
                outerContainerId=""
                overlayClassName=""
                pageWrapId=""
                right={true}
                styles={
                  Object {
                    "bmCrossButton": Object {
                      "height": "1.125rem",
                      "right": 0,
                      "top": 0,
                      "width": "1.125rem",
                    },
                    "bmOverlay": Object {
                      "background": "rgba(0, 0, 0, 0.5)",
                    },
                  }
                }
                width={260}
              >
                <MobileNav
                  closeMobileMenu={[Function]}
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  signout={[Function]}
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </Menu>,
              <button
                aria-label="Menu"
                className="mr-text-white"
                onClick={[Function]}
              >
                <SvgSymbol
                  className="mr-w-6 mr-h-auto mr-fill-current"
                  sym="icon-menu"
                  viewBox="0 0 20 20"
                />
              </button>,
            ],
            "maxWidth": "1024px",
            "values": Object {},
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bodyClassName": "",
                "burgerBarClassName": "",
                "burgerButtonClassName": "",
                "children": <MobileNav
                  closeMobileMenu={[Function]}
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  signout={[Function]}
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": false,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "className": "",
                "crossButtonClassName": "",
                "crossClassName": "",
                "customBurgerIcon": false,
                "customCrossIcon": <SvgSymbol
                  className="mr-fill-white mr-w-full mr-h-full"
                  sym="icon-close"
                  viewBox="0 0 20 20"
                />,
                "disableCloseOnEsc": false,
                "id": "",
                "isOpen": false,
                "itemListClassName": "",
                "menuClassName": "",
                "morphShapeClassName": "",
                "noOverlay": false,
                "onStateChange": [Function],
                "outerContainerId": "",
                "overlayClassName": "",
                "pageWrapId": "",
                "right": true,
                "styles": Object {
                  "bmCrossButton": Object {
                    "height": "1.125rem",
                    "right": 0,
                    "top": 0,
                    "width": "1.125rem",
                  },
                  "bmOverlay": Object {
                    "background": "rgba(0, 0, 0, 0.5)",
                  },
                },
                "width": 260,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "closeMobileMenu": [Function],
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "signout": [Function],
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": false,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Menu",
                "children": <SvgSymbol
                  className="mr-w-6 mr-h-auto mr-fill-current"
                  sym="icon-menu"
                  viewBox="0 0 20 20"
                />,
                "className": "mr-text-white",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "mr-w-6 mr-h-auto mr-fill-current",
                  "sym": "icon-menu",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "button",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`includes a link to user profile page if user is logged in 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Navbar
    location={
      Object {
        "pathname": "/some/path",
      }
    }
    user={
      Object {
        "id": 357,
        "isLoggedIn": true,
        "osmProfile": Object {
          "avatarURL": "http://example.com/profilepic.jpg",
        },
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <nav
          className="mr-flex mr-items-center"
        >
          <Link
            className="mr-text-white hover:mr-text-current"
            rel="home"
            replace={false}
            to="/"
          >
            <SvgSymbol
              className="mr-block mr-fill-current mr-w-48 mr-h-auto"
              sym="mr-logo"
              viewBox="0 0 174 40"
            />
          </Link>
          <MediaQuery
            minWidth="992px"
            values={Object {}}
          >
            <div
              className="mr-ml-12"
            >
              <ol
                className="mr-list-nav-primary"
              >
                <Nav
                  closeMobileMenu={[Function]}
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </ol>
            </div>
          </MediaQuery>
        </nav>,
        <MediaQuery
          minWidth="992px"
          values={Object {}}
        >
          <LoggedInUser
            location={
              Object {
                "pathname": "/some/path",
              }
            }
            user={
              Object {
                "id": 357,
                "isLoggedIn": true,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              }
            }
          >
            <OnClickOutside(WithDeactivateOnOutsideClick)
              button={
                <ProfileButton
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              }
              eventTypes={
                Array [
                  "mousedown",
                  "touchstart",
                ]
              }
              excludeScrollbar={false}
              outsideClickIgnoreClass="ignore-react-onclickoutside"
              preventDefault={false}
              stopPropagation={false}
            >
              <ol
                className="mr-list-reset"
              >
                <li>
                  <Link
                    replace={false}
                    to="/user/profile"
                  >
                    <FormattedMessage
                      defaultMessage="User Profile"
                      id="Navbar.links.userProfile"
                      values={Object {}}
                    />
                  </Link>
                </li>
                <li>
                  <Link
                    replace={false}
                    to={Object {}}
                  >
                    <FormattedMessage
                      defaultMessage="Sign out"
                      id="Navbar.links.signout"
                      values={Object {}}
                    />
                  </Link>
                </li>
              </ol>
            </OnClickOutside(WithDeactivateOnOutsideClick)>
          </LoggedInUser>
          <LoggedOutUser
            location={
              Object {
                "pathname": "/some/path",
              }
            }
            user={
              Object {
                "id": 357,
                "isLoggedIn": true,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              }
            }
          >
            <Connect(SignInButton)
              className="white-on-green top-nav__signin-link"
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
          </LoggedOutUser>
        </MediaQuery>,
        <MediaQuery
          maxWidth="992px"
          values={Object {}}
        >
          <Menu
            bodyClassName=""
            burgerBarClassName=""
            burgerButtonClassName=""
            className=""
            crossButtonClassName=""
            crossClassName=""
            customBurgerIcon={false}
            customCrossIcon={
              <SvgSymbol
                className="mr-fill-white mr-w-full mr-h-full"
                sym="icon-close"
                viewBox="0 0 20 20"
              />
            }
            disableCloseOnEsc={false}
            id=""
            isOpen={false}
            itemListClassName=""
            menuClassName=""
            morphShapeClassName=""
            noOverlay={false}
            onStateChange={[Function]}
            outerContainerId=""
            overlayClassName=""
            pageWrapId=""
            right={true}
            styles={
              Object {
                "bmCrossButton": Object {
                  "right": 0,
                  "top": 0,
                },
              }
            }
            width={260}
          >
            <MobileNav
              closeMobileMenu={[Function]}
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              signout={[Function]}
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            />
          </Menu>
          <button
            aria-label="Menu"
            className="mr-text-white"
            onClick={[Function]}
          >
            <SvgSymbol
              className="mr-w-6 mr-h-auto mr-fill-current"
              sym="icon-menu"
              viewBox="0 0 20 20"
            />
          </button>
        </MediaQuery>,
      ],
      "className": "mr-relative mr-bg-gradient-green-blue mr-shadow mr-p-6 mr-flex mr-items-center mr-justify-between",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              className="mr-text-white hover:mr-text-current"
              rel="home"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                sym="mr-logo"
                viewBox="0 0 174 40"
              />
            </Link>,
            <MediaQuery
              minWidth="992px"
              values={Object {}}
            >
              <div
                className="mr-ml-12"
              >
                <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>
              </div>
            </MediaQuery>,
          ],
          "className": "mr-flex mr-items-center",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <SvgSymbol
                className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                sym="mr-logo"
                viewBox="0 0 174 40"
              />,
              "className": "mr-text-white hover:mr-text-current",
              "rel": "home",
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "mr-block mr-fill-current mr-w-48 mr-h-auto",
                "sym": "mr-logo",
                "viewBox": "0 0 174 40",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <div
                className="mr-ml-12"
              >
                <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>
              </div>,
              "minWidth": "992px",
              "values": Object {},
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>,
                "className": "mr-ml-12",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "className": "mr-list-nav-primary",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "closeMobileMenu": [Function],
                    "location": Object {
                      "pathname": "/some/path",
                    },
                    "user": Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "ol",
              },
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "nav",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <LoggedInUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <OnClickOutside(WithDeactivateOnOutsideClick)
                button={
                  <ProfileButton
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                }
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                excludeScrollbar={false}
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <ol
                  className="mr-list-reset"
                >
                  <li>
                    <Link
                      replace={false}
                      to="/user/profile"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.userProfile"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                  <li>
                    <Link
                      replace={false}
                      to={Object {}}
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.links.signout"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                </ol>
              </OnClickOutside(WithDeactivateOnOutsideClick)>
            </LoggedInUser>,
            <LoggedOutUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </LoggedOutUser>,
          ],
          "minWidth": "992px",
          "values": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <OnClickOutside(WithDeactivateOnOutsideClick)
                button={
                  <ProfileButton
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                }
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                excludeScrollbar={false}
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <ol
                  className="mr-list-reset"
                >
                  <li>
                    <Link
                      replace={false}
                      to="/user/profile"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.userProfile"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                  <li>
                    <Link
                      replace={false}
                      to={Object {}}
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.links.signout"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                </ol>
              </OnClickOutside(WithDeactivateOnOutsideClick)>,
              "location": Object {
                "pathname": "/some/path",
              },
              "user": Object {
                "id": 357,
                "isLoggedIn": true,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "button": <ProfileButton
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "children": <ol
                  className="mr-list-reset"
                >
                  <li>
                    <Link
                      replace={false}
                      to="/user/profile"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.userProfile"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                  <li>
                    <Link
                      replace={false}
                      to={Object {}}
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.links.signout"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                </ol>,
                "eventTypes": Array [
                  "mousedown",
                  "touchstart",
                ],
                "excludeScrollbar": false,
                "outsideClickIgnoreClass": "ignore-react-onclickoutside",
                "preventDefault": false,
                "stopPropagation": false,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <li>
                      <Link
                        replace={false}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </Link>
                    </li>,
                    <li>
                      <Link
                        replace={false}
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </Link>
                    </li>,
                  ],
                  "className": "mr-list-reset",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </Link>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />,
                        "replace": false,
                        "to": "/user/profile",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultMessage": "User Profile",
                          "id": "Navbar.links.userProfile",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": "li",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <Link
                        replace={false}
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </Link>,
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "children": <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />,
                        "onClick": undefined,
                        "replace": false,
                        "to": Object {},
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "defaultMessage": "Sign out",
                          "id": "Navbar.links.signout",
                          "values": Object {},
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      "type": [Function],
                    },
                    "type": "li",
                  },
                ],
                "type": "ol",
              },
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              "location": Object {
                "pathname": "/some/path",
              },
              "user": Object {
                "id": 357,
                "isLoggedIn": true,
                "osmProfile": Object {
                  "avatarURL": "http://example.com/profilepic.jpg",
                },
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "white-on-green top-nav__signin-link",
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={false}
              customCrossIcon={
                <SvgSymbol
                  className="mr-fill-white mr-w-full mr-h-full"
                  sym="icon-close"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "right": 0,
                    "top": 0,
                  },
                }
              }
              width={260}
            >
              <MobileNav
                closeMobileMenu={[Function]}
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                signout={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </Menu>,
            <button
              aria-label="Menu"
              className="mr-text-white"
              onClick={[Function]}
            >
              <SvgSymbol
                className="mr-w-6 mr-h-auto mr-fill-current"
                sym="icon-menu"
                viewBox="0 0 20 20"
              />
            </button>,
          ],
          "maxWidth": "992px",
          "values": Object {},
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "bodyClassName": "",
              "burgerBarClassName": "",
              "burgerButtonClassName": "",
              "children": <MobileNav
                closeMobileMenu={[Function]}
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                signout={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />,
              "className": "",
              "crossButtonClassName": "",
              "crossClassName": "",
              "customBurgerIcon": false,
              "customCrossIcon": <SvgSymbol
                className="mr-fill-white mr-w-full mr-h-full"
                sym="icon-close"
                viewBox="0 0 20 20"
              />,
              "disableCloseOnEsc": false,
              "id": "",
              "isOpen": false,
              "itemListClassName": "",
              "menuClassName": "",
              "morphShapeClassName": "",
              "noOverlay": false,
              "onStateChange": [Function],
              "outerContainerId": "",
              "overlayClassName": "",
              "pageWrapId": "",
              "right": true,
              "styles": Object {
                "bmCrossButton": Object {
                  "right": 0,
                  "top": 0,
                },
              },
              "width": 260,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "closeMobileMenu": [Function],
                "location": Object {
                  "pathname": "/some/path",
                },
                "signout": [Function],
                "user": Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "aria-label": "Menu",
              "children": <SvgSymbol
                className="mr-w-6 mr-h-auto mr-fill-current"
                sym="icon-menu"
                viewBox="0 0 20 20"
              />,
              "className": "mr-text-white",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "mr-w-6 mr-h-auto mr-fill-current",
                "sym": "icon-menu",
                "viewBox": "0 0 20 20",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "header",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <nav
            className="mr-flex mr-items-center"
          >
            <Link
              className="mr-text-white hover:mr-text-current"
              rel="home"
              replace={false}
              to="/"
            >
              <SvgSymbol
                className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                sym="mr-logo"
                viewBox="0 0 174 40"
              />
            </Link>
            <MediaQuery
              minWidth="992px"
              values={Object {}}
            >
              <div
                className="mr-ml-12"
              >
                <ol
                  className="mr-list-nav-primary"
                >
                  <Nav
                    closeMobileMenu={[Function]}
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                </ol>
              </div>
            </MediaQuery>
          </nav>,
          <MediaQuery
            minWidth="992px"
            values={Object {}}
          >
            <LoggedInUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <OnClickOutside(WithDeactivateOnOutsideClick)
                button={
                  <ProfileButton
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />
                }
                eventTypes={
                  Array [
                    "mousedown",
                    "touchstart",
                  ]
                }
                excludeScrollbar={false}
                outsideClickIgnoreClass="ignore-react-onclickoutside"
                preventDefault={false}
                stopPropagation={false}
              >
                <ol
                  className="mr-list-reset"
                >
                  <li>
                    <Link
                      replace={false}
                      to="/user/profile"
                    >
                      <FormattedMessage
                        defaultMessage="User Profile"
                        id="Navbar.links.userProfile"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                  <li>
                    <Link
                      replace={false}
                      to={Object {}}
                    >
                      <FormattedMessage
                        defaultMessage="Sign out"
                        id="Navbar.links.signout"
                        values={Object {}}
                      />
                    </Link>
                  </li>
                </ol>
              </OnClickOutside(WithDeactivateOnOutsideClick)>
            </LoggedInUser>
            <LoggedOutUser
              location={
                Object {
                  "pathname": "/some/path",
                }
              }
              user={
                Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                }
              }
            >
              <Connect(SignInButton)
                className="white-on-green top-nav__signin-link"
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </LoggedOutUser>
          </MediaQuery>,
          <MediaQuery
            maxWidth="992px"
            values={Object {}}
          >
            <Menu
              bodyClassName=""
              burgerBarClassName=""
              burgerButtonClassName=""
              className=""
              crossButtonClassName=""
              crossClassName=""
              customBurgerIcon={false}
              customCrossIcon={
                <SvgSymbol
                  className="mr-fill-white mr-w-full mr-h-full"
                  sym="icon-close"
                  viewBox="0 0 20 20"
                />
              }
              disableCloseOnEsc={false}
              id=""
              isOpen={false}
              itemListClassName=""
              menuClassName=""
              morphShapeClassName=""
              noOverlay={false}
              onStateChange={[Function]}
              outerContainerId=""
              overlayClassName=""
              pageWrapId=""
              right={true}
              styles={
                Object {
                  "bmCrossButton": Object {
                    "right": 0,
                    "top": 0,
                  },
                }
              }
              width={260}
            >
              <MobileNav
                closeMobileMenu={[Function]}
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                signout={[Function]}
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              />
            </Menu>
            <button
              aria-label="Menu"
              className="mr-text-white"
              onClick={[Function]}
            >
              <SvgSymbol
                className="mr-w-6 mr-h-auto mr-fill-current"
                sym="icon-menu"
                viewBox="0 0 20 20"
              />
            </button>
          </MediaQuery>,
        ],
        "className": "mr-relative mr-bg-gradient-green-blue mr-shadow mr-p-6 mr-flex mr-items-center mr-justify-between",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                className="mr-text-white hover:mr-text-current"
                rel="home"
                replace={false}
                to="/"
              >
                <SvgSymbol
                  className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                  sym="mr-logo"
                  viewBox="0 0 174 40"
                />
              </Link>,
              <MediaQuery
                minWidth="992px"
                values={Object {}}
              >
                <div
                  className="mr-ml-12"
                >
                  <ol
                    className="mr-list-nav-primary"
                  >
                    <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": true,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  </ol>
                </div>
              </MediaQuery>,
            ],
            "className": "mr-flex mr-items-center",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <SvgSymbol
                  className="mr-block mr-fill-current mr-w-48 mr-h-auto"
                  sym="mr-logo"
                  viewBox="0 0 174 40"
                />,
                "className": "mr-text-white hover:mr-text-current",
                "rel": "home",
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "mr-block mr-fill-current mr-w-48 mr-h-auto",
                  "sym": "mr-logo",
                  "viewBox": "0 0 174 40",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <div
                  className="mr-ml-12"
                >
                  <ol
                    className="mr-list-nav-primary"
                  >
                    <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": true,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  </ol>
                </div>,
                "minWidth": "992px",
                "values": Object {},
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <ol
                    className="mr-list-nav-primary"
                  >
                    <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": true,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  </ol>,
                  "className": "mr-ml-12",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Nav
                      closeMobileMenu={[Function]}
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": true,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />,
                    "className": "mr-list-nav-primary",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "closeMobileMenu": [Function],
                      "location": Object {
                        "pathname": "/some/path",
                      },
                      "user": Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      },
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "ol",
                },
                "type": "div",
              },
              "type": [Function],
            },
          ],
          "type": "nav",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <LoggedInUser
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              >
                <OnClickOutside(WithDeactivateOnOutsideClick)
                  button={
                    <ProfileButton
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": true,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  }
                  eventTypes={
                    Array [
                      "mousedown",
                      "touchstart",
                    ]
                  }
                  excludeScrollbar={false}
                  outsideClickIgnoreClass="ignore-react-onclickoutside"
                  preventDefault={false}
                  stopPropagation={false}
                >
                  <ol
                    className="mr-list-reset"
                  >
                    <li>
                      <Link
                        replace={false}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </Link>
                    </li>
                    <li>
                      <Link
                        replace={false}
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </Link>
                    </li>
                  </ol>
                </OnClickOutside(WithDeactivateOnOutsideClick)>
              </LoggedInUser>,
              <LoggedOutUser
                location={
                  Object {
                    "pathname": "/some/path",
                  }
                }
                user={
                  Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  }
                }
              >
                <Connect(SignInButton)
                  className="white-on-green top-nav__signin-link"
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </LoggedOutUser>,
            ],
            "minWidth": "992px",
            "values": Object {},
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <OnClickOutside(WithDeactivateOnOutsideClick)
                  button={
                    <ProfileButton
                      location={
                        Object {
                          "pathname": "/some/path",
                        }
                      }
                      user={
                        Object {
                          "id": 357,
                          "isLoggedIn": true,
                          "osmProfile": Object {
                            "avatarURL": "http://example.com/profilepic.jpg",
                          },
                        }
                      }
                    />
                  }
                  eventTypes={
                    Array [
                      "mousedown",
                      "touchstart",
                    ]
                  }
                  excludeScrollbar={false}
                  outsideClickIgnoreClass="ignore-react-onclickoutside"
                  preventDefault={false}
                  stopPropagation={false}
                >
                  <ol
                    className="mr-list-reset"
                  >
                    <li>
                      <Link
                        replace={false}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </Link>
                    </li>
                    <li>
                      <Link
                        replace={false}
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </Link>
                    </li>
                  </ol>
                </OnClickOutside(WithDeactivateOnOutsideClick)>,
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "button": <ProfileButton
                    location={
                      Object {
                        "pathname": "/some/path",
                      }
                    }
                    user={
                      Object {
                        "id": 357,
                        "isLoggedIn": true,
                        "osmProfile": Object {
                          "avatarURL": "http://example.com/profilepic.jpg",
                        },
                      }
                    }
                  />,
                  "children": <ol
                    className="mr-list-reset"
                  >
                    <li>
                      <Link
                        replace={false}
                        to="/user/profile"
                      >
                        <FormattedMessage
                          defaultMessage="User Profile"
                          id="Navbar.links.userProfile"
                          values={Object {}}
                        />
                      </Link>
                    </li>
                    <li>
                      <Link
                        replace={false}
                        to={Object {}}
                      >
                        <FormattedMessage
                          defaultMessage="Sign out"
                          id="Navbar.links.signout"
                          values={Object {}}
                        />
                      </Link>
                    </li>
                  </ol>,
                  "eventTypes": Array [
                    "mousedown",
                    "touchstart",
                  ],
                  "excludeScrollbar": false,
                  "outsideClickIgnoreClass": "ignore-react-onclickoutside",
                  "preventDefault": false,
                  "stopPropagation": false,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <li>
                        <Link
                          replace={false}
                          to="/user/profile"
                        >
                          <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />
                        </Link>
                      </li>,
                      <li>
                        <Link
                          replace={false}
                          to={Object {}}
                        >
                          <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />
                        </Link>
                      </li>,
                    ],
                    "className": "mr-list-reset",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to="/user/profile"
                        >
                          <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />
                        </Link>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <FormattedMessage
                            defaultMessage="User Profile"
                            id="Navbar.links.userProfile"
                            values={Object {}}
                          />,
                          "replace": false,
                          "to": "/user/profile",
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "defaultMessage": "User Profile",
                            "id": "Navbar.links.userProfile",
                            "values": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      "type": "li",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <Link
                          replace={false}
                          to={Object {}}
                        >
                          <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />
                        </Link>,
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "children": <FormattedMessage
                            defaultMessage="Sign out"
                            id="Navbar.links.signout"
                            values={Object {}}
                          />,
                          "onClick": undefined,
                          "replace": false,
                          "to": Object {},
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "defaultMessage": "Sign out",
                            "id": "Navbar.links.signout",
                            "values": Object {},
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        "type": [Function],
                      },
                      "type": "li",
                    },
                  ],
                  "type": "ol",
                },
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Connect(SignInButton)
                  className="white-on-green top-nav__signin-link"
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "location": Object {
                  "pathname": "/some/path",
                },
                "user": Object {
                  "id": 357,
                  "isLoggedIn": true,
                  "osmProfile": Object {
                    "avatarURL": "http://example.com/profilepic.jpg",
                  },
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "white-on-green top-nav__signin-link",
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Menu
                bodyClassName=""
                burgerBarClassName=""
                burgerButtonClassName=""
                className=""
                crossButtonClassName=""
                crossClassName=""
                customBurgerIcon={false}
                customCrossIcon={
                  <SvgSymbol
                    className="mr-fill-white mr-w-full mr-h-full"
                    sym="icon-close"
                    viewBox="0 0 20 20"
                  />
                }
                disableCloseOnEsc={false}
                id=""
                isOpen={false}
                itemListClassName=""
                menuClassName=""
                morphShapeClassName=""
                noOverlay={false}
                onStateChange={[Function]}
                outerContainerId=""
                overlayClassName=""
                pageWrapId=""
                right={true}
                styles={
                  Object {
                    "bmCrossButton": Object {
                      "right": 0,
                      "top": 0,
                    },
                  }
                }
                width={260}
              >
                <MobileNav
                  closeMobileMenu={[Function]}
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  signout={[Function]}
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />
              </Menu>,
              <button
                aria-label="Menu"
                className="mr-text-white"
                onClick={[Function]}
              >
                <SvgSymbol
                  className="mr-w-6 mr-h-auto mr-fill-current"
                  sym="icon-menu"
                  viewBox="0 0 20 20"
                />
              </button>,
            ],
            "maxWidth": "992px",
            "values": Object {},
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "bodyClassName": "",
                "burgerBarClassName": "",
                "burgerButtonClassName": "",
                "children": <MobileNav
                  closeMobileMenu={[Function]}
                  location={
                    Object {
                      "pathname": "/some/path",
                    }
                  }
                  signout={[Function]}
                  user={
                    Object {
                      "id": 357,
                      "isLoggedIn": true,
                      "osmProfile": Object {
                        "avatarURL": "http://example.com/profilepic.jpg",
                      },
                    }
                  }
                />,
                "className": "",
                "crossButtonClassName": "",
                "crossClassName": "",
                "customBurgerIcon": false,
                "customCrossIcon": <SvgSymbol
                  className="mr-fill-white mr-w-full mr-h-full"
                  sym="icon-close"
                  viewBox="0 0 20 20"
                />,
                "disableCloseOnEsc": false,
                "id": "",
                "isOpen": false,
                "itemListClassName": "",
                "menuClassName": "",
                "morphShapeClassName": "",
                "noOverlay": false,
                "onStateChange": [Function],
                "outerContainerId": "",
                "overlayClassName": "",
                "pageWrapId": "",
                "right": true,
                "styles": Object {
                  "bmCrossButton": Object {
                    "right": 0,
                    "top": 0,
                  },
                },
                "width": 260,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "closeMobileMenu": [Function],
                  "location": Object {
                    "pathname": "/some/path",
                  },
                  "signout": [Function],
                  "user": Object {
                    "id": 357,
                    "isLoggedIn": true,
                    "osmProfile": Object {
                      "avatarURL": "http://example.com/profilepic.jpg",
                    },
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "aria-label": "Menu",
                "children": <SvgSymbol
                  className="mr-w-6 mr-h-auto mr-fill-current"
                  sym="icon-menu"
                  viewBox="0 0 20 20"
                />,
                "className": "mr-text-white",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "className": "mr-w-6 mr-h-auto mr-fill-current",
                  "sym": "icon-menu",
                  "viewBox": "0 0 20 20",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "button",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "header",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
