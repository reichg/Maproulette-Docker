// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`does not include link to changeset if changeset not present 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskStatusIndicator
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Fixed"
            id="Task.status.fixed"
            values={Object {}}
          />
        </div>
      </div>,
      "className": "task-status",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Fixed"
            id="Task.status.fixed"
            values={Object {}}
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FormattedMessage
              defaultMessage="Fixed"
              id="Task.status.fixed"
              values={Object {}}
            />,
            false,
          ],
          "className": "task-status__label",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Fixed",
              "id": "Task.status.fixed",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Fixed"
              id="Task.status.fixed"
              values={Object {}}
            />
          </div>
        </div>,
        "className": "task-status",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Fixed"
              id="Task.status.fixed"
              values={Object {}}
            />
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FormattedMessage
                defaultMessage="Fixed"
                id="Task.status.fixed"
                values={Object {}}
              />,
              false,
            ],
            "className": "task-status__label",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Fixed",
                "id": "Task.status.fixed",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`doesn't show the task status for created status by default 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskStatusIndicator
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 0,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`includes link to changeset if changeset present 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskStatusIndicator
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    task={
      Object {
        "changesetId": 123456,
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 1,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Fixed"
            id="Task.status.fixed"
            values={Object {}}
          />
          <a
            className="task-status__view-changeset-link"
            href="https://www.openstreetmap.org/changeset/123456"
            rel="noopener noreferrer"
            target="_blank"
          >
            <FormattedMessage
              defaultMessage="View Changeset"
              id="ActiveTask.controls.viewChangset.label"
              values={Object {}}
            />
          </a>
        </div>
      </div>,
      "className": "task-status",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Fixed"
            id="Task.status.fixed"
            values={Object {}}
          />
          <a
            className="task-status__view-changeset-link"
            href="https://www.openstreetmap.org/changeset/123456"
            rel="noopener noreferrer"
            target="_blank"
          >
            <FormattedMessage
              defaultMessage="View Changeset"
              id="ActiveTask.controls.viewChangset.label"
              values={Object {}}
            />
          </a>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FormattedMessage
              defaultMessage="Fixed"
              id="Task.status.fixed"
              values={Object {}}
            />,
            <a
              className="task-status__view-changeset-link"
              href="https://www.openstreetmap.org/changeset/123456"
              rel="noopener noreferrer"
              target="_blank"
            >
              <FormattedMessage
                defaultMessage="View Changeset"
                id="ActiveTask.controls.viewChangset.label"
                values={Object {}}
              />
            </a>,
          ],
          "className": "task-status__label",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Fixed",
              "id": "Task.status.fixed",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="View Changeset"
                id="ActiveTask.controls.viewChangset.label"
                values={Object {}}
              />,
              "className": "task-status__view-changeset-link",
              "href": "https://www.openstreetmap.org/changeset/123456",
              "rel": "noopener noreferrer",
              "target": "_blank",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "View Changeset",
                "id": "ActiveTask.controls.viewChangset.label",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "a",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Fixed"
              id="Task.status.fixed"
              values={Object {}}
            />
            <a
              className="task-status__view-changeset-link"
              href="https://www.openstreetmap.org/changeset/123456"
              rel="noopener noreferrer"
              target="_blank"
            >
              <FormattedMessage
                defaultMessage="View Changeset"
                id="ActiveTask.controls.viewChangset.label"
                values={Object {}}
              />
            </a>
          </div>
        </div>,
        "className": "task-status",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Fixed"
              id="Task.status.fixed"
              values={Object {}}
            />
            <a
              className="task-status__view-changeset-link"
              href="https://www.openstreetmap.org/changeset/123456"
              rel="noopener noreferrer"
              target="_blank"
            >
              <FormattedMessage
                defaultMessage="View Changeset"
                id="ActiveTask.controls.viewChangset.label"
                values={Object {}}
              />
            </a>
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FormattedMessage
                defaultMessage="Fixed"
                id="Task.status.fixed"
                values={Object {}}
              />,
              <a
                className="task-status__view-changeset-link"
                href="https://www.openstreetmap.org/changeset/123456"
                rel="noopener noreferrer"
                target="_blank"
              >
                <FormattedMessage
                  defaultMessage="View Changeset"
                  id="ActiveTask.controls.viewChangset.label"
                  values={Object {}}
                />
              </a>,
            ],
            "className": "task-status__label",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Fixed",
                "id": "Task.status.fixed",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <FormattedMessage
                  defaultMessage="View Changeset"
                  id="ActiveTask.controls.viewChangset.label"
                  values={Object {}}
                />,
                "className": "task-status__view-changeset-link",
                "href": "https://www.openstreetmap.org/changeset/123456",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultMessage": "View Changeset",
                  "id": "ActiveTask.controls.viewChangset.label",
                  "values": Object {},
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "a",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`shows created task status if showAnyStatus is set to true 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskStatusIndicator
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    showAnyStatus={true}
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 0,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Created"
            id="Task.status.created"
            values={Object {}}
          />
        </div>
      </div>,
      "className": "task-status",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Created"
            id="Task.status.created"
            values={Object {}}
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FormattedMessage
              defaultMessage="Created"
              id="Task.status.created"
              values={Object {}}
            />,
            false,
          ],
          "className": "task-status__label",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Created",
              "id": "Task.status.created",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Created"
              id="Task.status.created"
              values={Object {}}
            />
          </div>
        </div>,
        "className": "task-status",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Created"
              id="Task.status.created"
              values={Object {}}
            />
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FormattedMessage
                defaultMessage="Created"
                id="Task.status.created"
                values={Object {}}
              />,
              false,
            ],
            "className": "task-status__label",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Created",
                "id": "Task.status.created",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`shows the task status for a non-created status 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskStatusIndicator
    intl={
      Object {
        "formatMessage": [MockFunction],
      }
    }
    task={
      Object {
        "id": 123,
        "parent": Object {
          "id": 321,
        },
        "status": 3,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Skipped"
            id="Task.status.skipped"
            values={Object {}}
          />
        </div>
      </div>,
      "className": "task-status",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="task-status__label"
        >
          <FormattedMessage
            defaultMessage="Skipped"
            id="Task.status.skipped"
            values={Object {}}
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <FormattedMessage
              defaultMessage="Skipped"
              id="Task.status.skipped"
              values={Object {}}
            />,
            false,
          ],
          "className": "task-status__label",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Skipped",
              "id": "Task.status.skipped",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Skipped"
              id="Task.status.skipped"
              values={Object {}}
            />
          </div>
        </div>,
        "className": "task-status",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="task-status__label"
          >
            <FormattedMessage
              defaultMessage="Skipped"
              id="Task.status.skipped"
              values={Object {}}
            />
          </div>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <FormattedMessage
                defaultMessage="Skipped"
                id="Task.status.skipped"
                values={Object {}}
              />,
              false,
            ],
            "className": "task-status__label",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Skipped",
                "id": "Task.status.skipped",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
