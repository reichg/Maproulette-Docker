// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders with props as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterByLocation
    challenges={
      Array [
        Object {
          "blurb": "Challenge 309 blurb",
          "description": "Challenge 309 description",
          "id": 309,
          "name": "Challenge 309",
          "parent": Object {
            "displayName": "foo",
          },
        },
        Object {
          "blurb": "Challenge 311 blurb",
          "description": "Challenge 311 description",
          "id": 311,
          "name": "Challenge 311",
          "parent": Object {
            "displayName": "bar",
          },
        },
      ]
    }
    intl={
      Object {
        "formatMessage": [MockFunction] {
          "calls": Array [
            Array [
              Object {
                "defaultMessage": "Near Me",
                "id": "Challenge.location.nearMe",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Within Map Bounds",
                "id": "Challenge.location.withinMapBounds",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Intersecting Map Bounds",
                "id": "Challenge.location.intersectingMapBounds",
              },
            ],
            Array [
              Object {
                "defaultMessage": "Anywhere",
                "id": "Challenge.location.any",
              },
            ],
          ],
          "results": Array [
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
            Object {
              "isThrow": false,
              "value": undefined,
            },
          ],
        },
      }
    }
    locateMapToUser={[MockFunction]}
    mapBounds={
      Object {
        "challenges": Object {
          "bounds": 1,
        },
      }
    }
    removeSearchFilters={[MockFunction]}
    searchFilters={
      Object {
        "difficulty": 1,
      }
    }
    setSearchFilters={[MockFunction]}
    user={
      Object {
        "id": 11,
        "savedChallenges": Array [],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "button": <ButtonFilter
        type={
          <FormattedMessage
            defaultMessage="Location"
            id="ChallengeFilterSubnav.filter.location.label"
            values={Object {}}
          />
        }
      />,
      "children": <ol
        className="mr-list-dropdown mr-list-dropdown--ruled"
      >
        <li>
          <a
            onClick={[Function]}
          />
        </li>
        <li>
          <a
            onClick={[Function]}
          />
        </li>
        <li>
          <a
            onClick={[Function]}
          />
        </li>
        <li>
          <a
            onClick={[Function]}
          />
        </li>
      </ol>,
      "className": "mr-dropdown--flush xl:mr-border-l xl:mr-border-white-10 mr-p-6 mr-pl-0 xl:mr-pl-6",
      "close": [Function],
      "isVisible": false,
      "toggleVisible": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <li>
            <a
              onClick={[Function]}
            />
          </li>,
          <li>
            <a
              onClick={[Function]}
            />
          </li>,
          <li>
            <a
              onClick={[Function]}
            />
          </li>,
          <li>
            <a
              onClick={[Function]}
            />
          </li>,
        ],
        "className": "mr-list-dropdown mr-list-dropdown--ruled",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "any",
          "nodeType": "host",
          "props": Object {
            "children": <a
              onClick={[Function]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "a",
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "withinMapBounds",
          "nodeType": "host",
          "props": Object {
            "children": <a
              onClick={[Function]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "a",
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "intersectingMapBounds",
          "nodeType": "host",
          "props": Object {
            "children": <a
              onClick={[Function]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "a",
          },
          "type": "li",
        },
        Object {
          "instance": null,
          "key": "nearMe",
          "nodeType": "host",
          "props": Object {
            "children": <a
              onClick={[Function]}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": undefined,
              "onClick": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": "a",
          },
          "type": "li",
        },
      ],
      "type": "ol",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "button": <ButtonFilter
          type={
            <FormattedMessage
              defaultMessage="Location"
              id="ChallengeFilterSubnav.filter.location.label"
              values={Object {}}
            />
          }
        />,
        "children": <ol
          className="mr-list-dropdown mr-list-dropdown--ruled"
        >
          <li>
            <a
              onClick={[Function]}
            />
          </li>
          <li>
            <a
              onClick={[Function]}
            />
          </li>
          <li>
            <a
              onClick={[Function]}
            />
          </li>
          <li>
            <a
              onClick={[Function]}
            />
          </li>
        </ol>,
        "className": "mr-dropdown--flush xl:mr-border-l xl:mr-border-white-10 mr-p-6 mr-pl-0 xl:mr-pl-6",
        "close": [Function],
        "isVisible": false,
        "toggleVisible": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <li>
              <a
                onClick={[Function]}
              />
            </li>,
            <li>
              <a
                onClick={[Function]}
              />
            </li>,
            <li>
              <a
                onClick={[Function]}
              />
            </li>,
            <li>
              <a
                onClick={[Function]}
              />
            </li>,
          ],
          "className": "mr-list-dropdown mr-list-dropdown--ruled",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "any",
            "nodeType": "host",
            "props": Object {
              "children": <a
                onClick={[Function]}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "a",
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "withinMapBounds",
            "nodeType": "host",
            "props": Object {
              "children": <a
                onClick={[Function]}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "a",
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "intersectingMapBounds",
            "nodeType": "host",
            "props": Object {
              "children": <a
                onClick={[Function]}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "a",
            },
            "type": "li",
          },
          Object {
            "instance": null,
            "key": "nearMe",
            "nodeType": "host",
            "props": Object {
              "children": <a
                onClick={[Function]}
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "onClick": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": "a",
            },
            "type": "li",
          },
        ],
        "type": "ol",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
